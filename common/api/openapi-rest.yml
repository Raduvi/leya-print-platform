openapi: 3.0.3
info:
  title: Leya-Print - OpenAPI 3.0
  description: |-
    This is the Open API description of the Leya Server based on the OpenAPI 3.0 specification. 
    Leya Print is a powerful and user-friendly tool for generating PDFs from customizable templates. Leya Print is designed to make it easy for developers to create professional-looking PDF documents for a variety of purposes.
    
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.

    More info related to
    Swagger at [https://swagger.io](https://swagger.io).
    
    Some useful links:
    - [Leya-Print repository](https://gitlab.code-better.it/leya/leya-print/-/tree/develop)
    - [The source API definition for Leya-Print](https://gitlab.code-better.it/leya/leya-print/-/blob/36-OpenApi_Definition_of_rest_server/common/api/openapi-rest.yml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: info@leya-it-solutions.de
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://leya-print-demo.azurewebsites.net  
tags:
  - name: pdf-service
    description: Service for processing PDFs
  - name: tpl-service
    description: Service for processing templates
paths:
  /pdf/alive:
    get:
      tags:
        - pdf-service
      summary: Get health status for pdf service
      description: Gets status of pdf-service and related services that are needed for this service to run correctly like tpl-service and print front-end.
      operationId: alive
      responses:
        '200':
          description: Successful operation
        '404':
          description: Service not found
        '503':
          description: Service unavailable
  
  /pdf/{templateId}:
    post:
      tags:
        - pdf-service
      summary: Get pdf file 
      description: Template id can be provided and package name.
      operationId: postPDFByTemplateId
      requestBody:
        content: 
          application/json:
            schema:
              type: object
              example:
                  invoiceNo: '239045001'
                  customerReference: |-
                    project: leya-print
                    work-item: invoice-sample
                  sender:
                    address:
                      company: Max Hardware Ltd.
                      street1: Industry Park 128-48
                      zipCode: '654321'
                      city: Industry City
                    vatIdent: TEST293401
                    phone: +1 (636) 555-0113
                    email: test@email.it
                    web: https://test.net
                    bankDetails:
                      name: Black-List-Bank
                      iban: TEST1234567891011
                      bic: BIC20D1DDS
                  recipient:
                    address:
                      firstName: Sample
                      lastName: Customer
                      street1: Mainstreet 5a
                      zipCode: '123456'
                      city: Small Town
                  date: '2022-07-08T15:55:34.315Z'
                  positions:
                    - title: Big Hammer
                      quantity: 1
                      unit: pcs
                      pricePerUnit: 99
                      vatPercent: 8.91
                    - title: Screws 80mm
                      quantity: 100
                      unit: pcs
                      pricePerUnit: 0.02
                      vatPercent: 8.91
                  
      parameters:
        - name: templateId
          in: path
          description: Template Id
          required: true
          explode: false
          schema:
            type: string
        - name: queryParams
          in: query
          description: Query parameters
          required: false
          schema:
            type: string
        - name: payload
          in: query
          description: Body pdf payload in json format
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '500':
          description: internal server error
  
  /sign/{certificateId}:
    post:
      tags:
        - pdf-service
      summary: Sign pdf with certificate
      description: Endpoint that requires a pdf and a certificate id will return the pdf signed with that certificate.
      operationId: signPDFWithCertificateId
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pdf:
                  type: string
                  format: binary
                  description: The PDF file to upload
              
      parameters:
        - name: certificateId
          in: path
          description: Certificate Id
          required: true
          explode: false
          schema:
            type: string
        - name: reason
          in: query
          description: Reason for signing the pdf
          required: false
          schema:
            type: string
        - name: contactInfo
          in: query
          description: Contact information for signature
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: Name parameter for signature
          required: false
          schema:
            type: string
        - name: location
          in: query
          description: Location parameter for signature
          required: false
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/pdf: {}
        '500':
          description: internal server error
  
  /tpl/alive:
    get:
      tags:
        - tpl-service
      summary: Returns health status of tpl-service
      description: Returns health status of tpl-service
      operationId: getTplServiceAlive
      responses:
        '200':
          description: successful operation
        '400':
          description: bad request
  
  /tpl:
    get:
      tags:
        - tpl-service
      summary: Gets all templates
      description: Gets all templates
      operationId: getTemplates
      responses:
        '200':
          description: successful operation
        '500':
          description: internal server error
  
  /tpl/{templateId}/exists:
    get:
      tags:
        - tpl-service
      summary: Checks if template exists by template id
      description: Returns true if template exists by template id
      operationId: getTemplateExists
      parameters:
        - name: templateId
          in: path
          description: Template Id
          required: true
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          
  /tpl/:
    post:
      tags:
        - tpl-service
      summary: Uploads templates as a .tgz file
      description: Uploads templates as a .tgz file
      operationId: tplPost
      requestBody:
        content: 
          multipart/form-data:
            schema:
                  type: array
                  items:
                    type: object
                    properties: 
                      fieldname: #Field name specified in the form  
                        type: string
                      originalname:  #Name of the file on the user's computer
                        type: string
                      encoding: #Encoding type of the file
                        type: string
                      mimetype:  #Mime type of the file  
                        type: string
                      size:  #Size of the file in bytes  
                        type: number
                      stream: # A readable stream of this file. Only available to the `_handleFile` callback for custom `StorageEngine`s.
                        type: object
                      destination:  #The folder to which the file has been saved  
                        type: string
                      filename:  #The name of the file within the destination  DiskStorage
                        type: string
                      path:  #The full path to the uploaded file  DiskStorage
                        type: string
                      buffer: # `MemoryStorage` only: A Buffer containing the entire file.
                        type: object
      parameters:
        - name: files
          in: query
          description: Template files
          required: true
          explode: false
          schema:
            type: array
            items:
              type: object
      responses:
        '200':
          description: successful operation
        '500':
          description: internal server error