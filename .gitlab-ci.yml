# See https://docs.gitlab.com/ee/ci/yaml/index.html for all available options

image: node:latest

stages:
  - api-build
  - build
  - container
  - deploy
  - check-status

variables:
  DEV_ENV_URL: https://leya-print-demo.azurewebsites.net

before_script:
  - echo "Before script section"
  # - echo "For example you might run an update here or install a build dependency"
  # - echo "Or perhaps you might print out some debugging details"

after_script:
  - echo "After script section"
  # - echo "For example you might do some cleanup here"

.start_on_pr_and_default:
  rules:
  - if: $CI_PIPELINE_SOURCE == 'schedule'
    when: never
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    when: always
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    when: always
  - when: never

.start_on_pr_only:
  rules:
  - if: $CI_PIPELINE_SOURCE == 'schedule'
    when: never
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    when: never
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    when: always
  - when: never

.start_on_default_only:
  rules:
  - if: $CI_PIPELINE_SOURCE == 'schedule'
    when: never
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    when: always
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    when: never
  - when: never

build common-api:
  stage: api-build
  extends: .start_on_pr_and_default
  script: bash ./build/scripts/build-common-api.sh
  artifacts:
    name: "common-api"
    paths:
      - "common/api/leya-print-common-api-1.0.0.tgz"
    expire_in: "7 days"

build auth-service:
  stage: build
  extends: .start_on_pr_and_default
  script: bash ./build/scripts/build-auth-service.sh
  artifacts:
    name: "auth-service"
    paths:
      - "server/auth-service/dist"
    expire_in: "7 days"

build pdf-service:
  stage: build
  extends: .start_on_pr_and_default
  script: bash ./build/scripts/build-pdf-service.sh
  artifacts:
    name: "pdf-service"
    paths:
      - "server/pdf-service/dist"
    expire_in: "7 days"

build tpl-service:
  stage: build
  extends: .start_on_pr_and_default
  script: bash ./build/scripts/build-tpl-service.sh
  artifacts:
    name: "tpl-service"
    paths:
      - "server/tpl-service/dist"
    expire_in: "7 days"

build web-designer:
  stage: build
  extends: .start_on_pr_and_default
  script: bash ./build/scripts/build-web-designer.sh
  artifacts:
    name: "web-designer"
    paths:
      - "web/designer/www-prod"
    expire_in: "7 days"

build web-print:
  stage: build
  extends: .start_on_pr_and_default
  script: bash ./build/scripts/build-web-print.sh
  artifacts:
    name: "web-print"
    paths:
      - "web/print/www-prod"
    expire_in: "7 days"

build docker image (dry run):
  image: docker:dind
  stage: container
  extends: .start_on_pr_only
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    # See https://github.com/docker-library/docker/pull/166
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  script:
    - cd server/container
    - sh build.sh
    - cd ../../e2e
    - docker-compose run e2e-test
  artifacts:
    name: "playwright-report"
    when: "always"
    paths:
      - "e2e/playwright-report"
    expire_in: "7 days"

build docker image:
  image: docker:dind
  stage: container
  extends: .start_on_default_only
  tags: ["docker"]
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    # See https://github.com/docker-library/docker/pull/166
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  script:
    - cd server/container
    - sh build.sh
    - cd ../../e2e
    - docker-compose run e2e-test
    - docker tag local.local/leya registry.code-better.it/leya/leya-print
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
    - docker push registry.code-better.it/leya/leya-print
  artifacts:
    name: "playwright-report"
    when: "always"
    paths:
      - "e2e/playwright-report"
    expire_in: "7 days"

deploy to dev:
  stage: deploy
  extends: .start_on_default_only
  tags: ["docker"]
  environment:
    name: leya-print-demo
    url: $DEV_ENV_URL/
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: on_success
    - when: never
  script:
    - curl `echo $triggerLeyaPrintDemoUpdate | base64 --decode` -H "" -d ""

check-status:
  image: docker:dind
  stage: check-status
  tags: ["docker"]
  variables:
    BASE_URL: $DEV_ENV_URL
  script:
    - cd e2e
    - docker-compose run e2e-test
  only:
    - schedules
    - manual
