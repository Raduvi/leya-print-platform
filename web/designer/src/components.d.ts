/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppRoot {
    }
    interface DesignerPage {
        "tplName": string;
        "tplPackage"?: string;
    }
    interface DesignerStage {
        "pageHeight": string;
        "pageWidth": string;
    }
    interface DesignerUi {
        "sampleData"?: any;
        "tplName": string;
    }
    interface HomePage {
        "templates": any[];
    }
    interface TemplateLive {
        "templates": any[];
    }
    interface TemplateUpload {
    }
}
declare global {
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLDesignerPageElement extends Components.DesignerPage, HTMLStencilElement {
    }
    var HTMLDesignerPageElement: {
        prototype: HTMLDesignerPageElement;
        new (): HTMLDesignerPageElement;
    };
    interface HTMLDesignerStageElement extends Components.DesignerStage, HTMLStencilElement {
    }
    var HTMLDesignerStageElement: {
        prototype: HTMLDesignerStageElement;
        new (): HTMLDesignerStageElement;
    };
    interface HTMLDesignerUiElement extends Components.DesignerUi, HTMLStencilElement {
    }
    var HTMLDesignerUiElement: {
        prototype: HTMLDesignerUiElement;
        new (): HTMLDesignerUiElement;
    };
    interface HTMLHomePageElement extends Components.HomePage, HTMLStencilElement {
    }
    var HTMLHomePageElement: {
        prototype: HTMLHomePageElement;
        new (): HTMLHomePageElement;
    };
    interface HTMLTemplateLiveElement extends Components.TemplateLive, HTMLStencilElement {
    }
    var HTMLTemplateLiveElement: {
        prototype: HTMLTemplateLiveElement;
        new (): HTMLTemplateLiveElement;
    };
    interface HTMLTemplateUploadElement extends Components.TemplateUpload, HTMLStencilElement {
    }
    var HTMLTemplateUploadElement: {
        prototype: HTMLTemplateUploadElement;
        new (): HTMLTemplateUploadElement;
    };
    interface HTMLElementTagNameMap {
        "app-root": HTMLAppRootElement;
        "designer-page": HTMLDesignerPageElement;
        "designer-stage": HTMLDesignerStageElement;
        "designer-ui": HTMLDesignerUiElement;
        "home-page": HTMLHomePageElement;
        "template-live": HTMLTemplateLiveElement;
        "template-upload": HTMLTemplateUploadElement;
    }
}
declare namespace LocalJSX {
    interface AppRoot {
    }
    interface DesignerPage {
        "tplName"?: string;
        "tplPackage"?: string;
    }
    interface DesignerStage {
        "pageHeight"?: string;
        "pageWidth"?: string;
    }
    interface DesignerUi {
        "onDesigner-reload-preview"?: (event: CustomEvent<void>) => void;
        "sampleData"?: any;
        "tplName"?: string;
    }
    interface HomePage {
        "templates"?: any[];
    }
    interface TemplateLive {
        "templates"?: any[];
    }
    interface TemplateUpload {
    }
    interface IntrinsicElements {
        "app-root": AppRoot;
        "designer-page": DesignerPage;
        "designer-stage": DesignerStage;
        "designer-ui": DesignerUi;
        "home-page": HomePage;
        "template-live": TemplateLive;
        "template-upload": TemplateUpload;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "designer-page": LocalJSX.DesignerPage & JSXBase.HTMLAttributes<HTMLDesignerPageElement>;
            "designer-stage": LocalJSX.DesignerStage & JSXBase.HTMLAttributes<HTMLDesignerStageElement>;
            "designer-ui": LocalJSX.DesignerUi & JSXBase.HTMLAttributes<HTMLDesignerUiElement>;
            "home-page": LocalJSX.HomePage & JSXBase.HTMLAttributes<HTMLHomePageElement>;
            "template-live": LocalJSX.TemplateLive & JSXBase.HTMLAttributes<HTMLTemplateLiveElement>;
            "template-upload": LocalJSX.TemplateUpload & JSXBase.HTMLAttributes<HTMLTemplateUploadElement>;
        }
    }
}
