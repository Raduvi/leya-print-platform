/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppRoot {
    }
    interface DesignerPage {
        "tplName": string;
    }
    interface DesignerStage {
        "footerHeight": string;
        "headerHeight": string;
        "pageHeight": string;
        "pageWidth": string;
    }
    interface HomePage {
        "templates": { ident: string; title: string; description: string; }[];
    }
    interface TplInvoiceContent {
    }
    interface TplInvoiceFooter {
    }
    interface TplInvoiceHeader {
    }
    interface TplWorkReportContent {
    }
    interface TplWorkReportFooter {
    }
    interface TplWorkReportHeader {
    }
}
declare global {
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLDesignerPageElement extends Components.DesignerPage, HTMLStencilElement {
    }
    var HTMLDesignerPageElement: {
        prototype: HTMLDesignerPageElement;
        new (): HTMLDesignerPageElement;
    };
    interface HTMLDesignerStageElement extends Components.DesignerStage, HTMLStencilElement {
    }
    var HTMLDesignerStageElement: {
        prototype: HTMLDesignerStageElement;
        new (): HTMLDesignerStageElement;
    };
    interface HTMLHomePageElement extends Components.HomePage, HTMLStencilElement {
    }
    var HTMLHomePageElement: {
        prototype: HTMLHomePageElement;
        new (): HTMLHomePageElement;
    };
    interface HTMLTplInvoiceContentElement extends Components.TplInvoiceContent, HTMLStencilElement {
    }
    var HTMLTplInvoiceContentElement: {
        prototype: HTMLTplInvoiceContentElement;
        new (): HTMLTplInvoiceContentElement;
    };
    interface HTMLTplInvoiceFooterElement extends Components.TplInvoiceFooter, HTMLStencilElement {
    }
    var HTMLTplInvoiceFooterElement: {
        prototype: HTMLTplInvoiceFooterElement;
        new (): HTMLTplInvoiceFooterElement;
    };
    interface HTMLTplInvoiceHeaderElement extends Components.TplInvoiceHeader, HTMLStencilElement {
    }
    var HTMLTplInvoiceHeaderElement: {
        prototype: HTMLTplInvoiceHeaderElement;
        new (): HTMLTplInvoiceHeaderElement;
    };
    interface HTMLTplWorkReportContentElement extends Components.TplWorkReportContent, HTMLStencilElement {
    }
    var HTMLTplWorkReportContentElement: {
        prototype: HTMLTplWorkReportContentElement;
        new (): HTMLTplWorkReportContentElement;
    };
    interface HTMLTplWorkReportFooterElement extends Components.TplWorkReportFooter, HTMLStencilElement {
    }
    var HTMLTplWorkReportFooterElement: {
        prototype: HTMLTplWorkReportFooterElement;
        new (): HTMLTplWorkReportFooterElement;
    };
    interface HTMLTplWorkReportHeaderElement extends Components.TplWorkReportHeader, HTMLStencilElement {
    }
    var HTMLTplWorkReportHeaderElement: {
        prototype: HTMLTplWorkReportHeaderElement;
        new (): HTMLTplWorkReportHeaderElement;
    };
    interface HTMLElementTagNameMap {
        "app-root": HTMLAppRootElement;
        "designer-page": HTMLDesignerPageElement;
        "designer-stage": HTMLDesignerStageElement;
        "home-page": HTMLHomePageElement;
        "tpl-invoice-content": HTMLTplInvoiceContentElement;
        "tpl-invoice-footer": HTMLTplInvoiceFooterElement;
        "tpl-invoice-header": HTMLTplInvoiceHeaderElement;
        "tpl-work-report-content": HTMLTplWorkReportContentElement;
        "tpl-work-report-footer": HTMLTplWorkReportFooterElement;
        "tpl-work-report-header": HTMLTplWorkReportHeaderElement;
    }
}
declare namespace LocalJSX {
    interface AppRoot {
    }
    interface DesignerPage {
        "tplName"?: string;
    }
    interface DesignerStage {
        "footerHeight"?: string;
        "headerHeight"?: string;
        "pageHeight"?: string;
        "pageWidth"?: string;
    }
    interface HomePage {
        "templates"?: { ident: string; title: string; description: string; }[];
    }
    interface TplInvoiceContent {
    }
    interface TplInvoiceFooter {
    }
    interface TplInvoiceHeader {
    }
    interface TplWorkReportContent {
    }
    interface TplWorkReportFooter {
    }
    interface TplWorkReportHeader {
    }
    interface IntrinsicElements {
        "app-root": AppRoot;
        "designer-page": DesignerPage;
        "designer-stage": DesignerStage;
        "home-page": HomePage;
        "tpl-invoice-content": TplInvoiceContent;
        "tpl-invoice-footer": TplInvoiceFooter;
        "tpl-invoice-header": TplInvoiceHeader;
        "tpl-work-report-content": TplWorkReportContent;
        "tpl-work-report-footer": TplWorkReportFooter;
        "tpl-work-report-header": TplWorkReportHeader;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "designer-page": LocalJSX.DesignerPage & JSXBase.HTMLAttributes<HTMLDesignerPageElement>;
            "designer-stage": LocalJSX.DesignerStage & JSXBase.HTMLAttributes<HTMLDesignerStageElement>;
            "home-page": LocalJSX.HomePage & JSXBase.HTMLAttributes<HTMLHomePageElement>;
            "tpl-invoice-content": LocalJSX.TplInvoiceContent & JSXBase.HTMLAttributes<HTMLTplInvoiceContentElement>;
            "tpl-invoice-footer": LocalJSX.TplInvoiceFooter & JSXBase.HTMLAttributes<HTMLTplInvoiceFooterElement>;
            "tpl-invoice-header": LocalJSX.TplInvoiceHeader & JSXBase.HTMLAttributes<HTMLTplInvoiceHeaderElement>;
            "tpl-work-report-content": LocalJSX.TplWorkReportContent & JSXBase.HTMLAttributes<HTMLTplWorkReportContentElement>;
            "tpl-work-report-footer": LocalJSX.TplWorkReportFooter & JSXBase.HTMLAttributes<HTMLTplWorkReportFooterElement>;
            "tpl-work-report-header": LocalJSX.TplWorkReportHeader & JSXBase.HTMLAttributes<HTMLTplWorkReportHeaderElement>;
        }
    }
}
